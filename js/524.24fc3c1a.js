"use strict";(self["webpackChunkconstellation"]=self["webpackChunkconstellation"]||[]).push([[524],{29326:function(e,n){n.MediaStream=window.MediaStream,n.MediaStreamTrack=window.MediaStreamTrack,n.RTCDataChannel=window.RTCDataChannel,n.RTCDataChannelEvent=window.RTCDataChannelEvent,n.RTCDtlsTransport=window.RTCDtlsTransport,n.RTCIceCandidate=window.RTCIceCandidate,n.RTCIceTransport=window.RTCIceTransport,n.RTCPeerConnection=window.RTCPeerConnection,n.RTCPeerConnectionIceEvent=window.RTCPeerConnectionIceEvent,n.RTCRtpReceiver=window.RTCRtpReceiver,n.RTCRtpSender=window.RTCRtpSender,n.RTCRtpTransceiver=window.RTCRtpTransceiver,n.RTCSctpTransport=window.RTCSctpTransport,n.RTCSessionDescription=window.RTCSessionDescription,n.getUserMedia=window.getUserMedia,n.mediaDevices=navigator.mediaDevices},83524:function(e,n,t){t.r(n),t.d(n,{default:function(){return l}});var i=t(14560),a=t(90409),r=t(29326),o=t(92410),s=t(25108);const c=Promise.all([t.e(499),t.e(577)]).then(t.bind(t,34577)),p=Promise.all([t.e(499),t.e(708),t.e(928)]).then(t.bind(t,58928)),d=async()=>{if(i.jU||i.iP)return(await c).default;if(i.$l)return{};if(i.UG)return(await p).default();throw new Error("Environnement non supporté")},w=()=>({libp2p:{modules:{},config:{peerDiscovery:{webRTCStar:{enabled:!0}},transport:{WebRTCStar:{wrtc:r,connEncryption:[o.c]}}},transportManager:{faultTolerance:1}},relay:{enabled:!0,hop:{enabled:!0,active:!0}},config:{Addresses:{Swarm:["/dns4/arcane-springs-02799.herokuapp.com/tcp/443/wss/p2p-webrtc-star/","/dns4/p2p-circuit-constellation.herokuapp.com/tcp/443/wss/p2p/QmY8XpuX6VnaUVDz4uA14vpjv3CZYLif3wLPqCkgU2KLSB"]}}});async function l(e="./constl/sfip"){const n={type:"proc",disposable:!1,test:!1,ipfsModule:await Promise.all([t.e(499),t.e(708),t.e(550)]).then(t.bind(t,51550))},i=w(),r=await d();i.libp2p.modules=r,i.repo=e,n.ipfsOptions=i;const o=await(0,a.E0)(n);return s.log("ipfsd créé"),await o.init(),s.log("ipfsd initialisé"),await o.start(),s.log("ipfsd démarré"),o.api}}}]);